<!DOCTYPE html>
<html>
    <head>
        <link href="main.css" rel="stylesheet" type="text/css">
        <script>
            //Draw the edges of the canvas as lines
            function drawEdges()
            {
                /*var canvas = document.getElementById("myCanvas");
                canvas.width = canvas.width;
                var ctx = canvas.getContext("2d");
                ctx.beginPath();
                ctx.moveTo(0, 0);
                ctx.lineTo(0, 400);
                ctx.lineTo(400, 400);
                ctx.lineTo(400, 0);
                ctx.lineTo(0, 0);
                ctx.lineWidth = 10;
                ctx.stroke();*/
            }
            if(window.addEventListener) {
    window.addEventListener('load', function () {
      var canvas, context, canvaso, contexto;
    
      // The active tool instance.
      var tool;
      var tool_default = 'line';
    
      function init () {
        // Find the canvas element.
        canvaso = document.getElementById('myCanvas');
        if (!canvaso) {
          alert('Error: I cannot find the canvas element!');
          return;
        }
    
        if (!canvaso.getContext) {
          alert('Error: no canvas.getContext!');
          return;
        }
    
        // Get the 2D canvas context.
        contexto = canvaso.getContext('2d');
        if (!contexto) {
          alert('Error: failed to getContext!');
          return;
        }
    
        // Add the temporary canvas.
        var container = canvaso.parentNode;
        canvas = document.createElement('canvas');
        if (!canvas) {
          alert('Error: I cannot create a new canvas element!');
          return;
        }
    
        canvas.id     = 'imageTemp';
        canvas.width  = canvaso.width;
        canvas.height = canvaso.height;
        container.appendChild(canvas);
    
        context = canvas.getContext('2d');
    
        // Attach the mousedown, mousemove and mouseup event listeners.
        canvas.addEventListener('mousedown', ev_canvas, false);
        canvas.addEventListener('mousemove', ev_canvas, false);
        canvas.addEventListener('mouseup',   ev_canvas, false);
      }
    
      // The general-purpose event handler. This function just determines the mouse 
      // position relative to the canvas element.
      function ev_canvas (ev) {
        if (ev.layerX || ev.layerX == 0) { // Firefox
          ev._x = ev.layerX;
          ev._y = ev.layerY;
        } else if (ev.offsetX || ev.offsetX == 0) { // Opera
          ev._x = ev.offsetX;
          ev._y = ev.offsetY;
        }

                // Activate the default tool.
                if (tools[tool_default]) {
          tool = new tools[tool_default]();
        }
    
        // Call the event handler of the tool.
        var func = tool[ev.type];
        if (func) {
          func(ev);
        }
      }
    
      // This function draws the #imageTemp canvas on top of #imageView, after which 
      // #imageTemp is cleared. This function is called each time when the user 
      // completes a drawing operation.
      function img_update () {
            contexto.drawImage(canvas, 0, 0);
            context.clearRect(0, 0, canvas.width, canvas.height);
      }
    
      // This object holds the implementation of each drawing tool.
      var tools = {};

      tools.line = function () {
        var tool = this;
        this.started = false;
    
        this.mousedown = function (ev) {
          tool.started = true;
          tool.x0 = ev._x;
          tool.y0 = ev._y;
        };
    
        this.mousemove = function (ev) {
          if (!tool.started) {
            return;
          }
    
          context.clearRect(0, 0, canvas.width, canvas.height);
    
          context.beginPath();
          context.moveTo(tool.x0, tool.y0);
          context.lineTo(ev._x,   ev._y);
          context.stroke();
          context.closePath();
        };
    
        this.mouseup = function (ev) {
          if (tool.started) {
            tool.mousemove(ev);
            tool.started = false;
            img_update();
          }
        };
      };
    
      init();
    
    }, false); }

        </script>
    </head>
    <body onload="drawEdges();">
        <!-- Navigation Bar On Top -->
        <div class="topnav">
            <a href="/">Home</a>
            <a href="/page2">Page 2</a>
            <a class="active" href="/page3">Page 3</a>
        </div>
        <h1>Draw lines to calculate triangles</h1>
        <!-- Blank Canvas -->
        <div class="boxCanvas">
            <canvas id="myCanvas" width="400" height="400"></canvas>
        </div>
    </body>
</html>